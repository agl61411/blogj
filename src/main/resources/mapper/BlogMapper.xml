<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yi.blogj.dao.BlogDao">
    <select id="findBlogById" resultType="com.yi.blogj.model.Blog">
        select
            id, creationtime, modifiedtime, title, content, tags, account_id
        from 
            blog
        where 
            id = #{id} and account_id = #{accountId} and deprecated = 0
    </select>

    <insert id="create" parameterType="com.yi.blogj.model.Blog" flushCache="true" useGeneratedKeys="true" keyProperty="id">
        insert into 
            blog(title, content, tags, account_id) 
        values 
            (#{title}, #{content}, #{tags}, #{accountId})
    </insert>

    <update id="update" parameterType="com.yi.blogj.model.Blog" flushCache="true">
        update blog 
		<set>
			<if test="title!=null">
				title=#{title},
			</if>
			<if test="content!=null">
				content=#{content},
			</if>
			<if test="tags!=null">
				tags=#{tags}
			</if>
        </set>
        where id = #{id} and account_id = #{accountId}
    </update>

    <update id="deleteById" parameterType="com.yi.blogj.model.Blog" flushCache="true">
        update blog set deprecated = 1 where id = #{id}
    </update>

    <resultMap type="java.lang.Integer" id="count">
		<result column="count"/>
	</resultMap>

    <resultMap id="blogList" type="com.yi.blogj.model.Blog">
        <result property="id" column="id" />
        <result property="creationtime" column="creationtime" />
        <result property="modifiedtime" column="modifiedtime" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="tags" column="tags" />
        <result property="accountId" column="account_id" />
    </resultMap>

    <select id="search" parameterType="map" resultMap="blogList,count">
        select
            id, creationtime, modifiedtime, title, content, tags, account_id
        from 
            blog
        where 
            deprecated = 0 and account_id = #{accountId}
        order by creationtime desc
        limit 
            #{page}, #{size};
        select found_rows() as count;
    </select>
</mapper>